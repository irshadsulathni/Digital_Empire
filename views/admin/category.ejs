<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Nest Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/adminAssets/imgs/theme/favicon.svg" />
    <!-- Template CSS -->
    <link href="/adminAssets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body class="dark">
    <div class="screen-overlay"></div>
    // for side nav bar

    <%- include('../layouts/adminSide') %>


        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-search">
                    <form class="searchform">
                        <div class="input-group">
                            <input list="search_terms" type="text" class="form-control" placeholder="Search term" />
                            <button class="btn btn-light bg" type="button"><i class="material-icons md-search"></i></button>
                        </div>
                        <datalist id="search_terms">
                            <option value="Products"></option>
                            <option value="New orders"></option>
                            <option value="Apple iphone"></option>
                            <option value="Ahmed Hassan"></option>
                        </datalist>
                    </form>
                </div>
                <div class="col-nav">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"><i class="material-icons md-apps"></i></button>
                    <ul class="nav">
                        <li class="nav-item">
                            <a class="nav-link btn-icon" href="#">
                                <i class="material-icons md-notifications animation-shake"></i>
                                <span class="badge rounded-pill">3</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                        </li>
                    </ul>
                </div>
            </header>
            <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title">Categories</h2>
                        <p>Add & edit category</p>
                    </div>
                    <!-- <div>
                        <input type="text" placeholder="Search Categories" class="form-control bg-white" />
                    </div> -->
                </div>
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                <% if (typeof message !=='undefined' ) { %>
                                    <p style="color: red;" class="d-inline-flex p-2 ">
                                        <%= message %>*
                                    </p>
                                    <% } %>
                                        <form method="post">
                                            <div class="mb-4">
                                                <label for="product_name" class="form-label">Name</label>
                                                <input type="text" placeholder="Type here" class="form-control"
                                                    name="categoryName" id="product_name" required />
                                            </div>

                                            <div class="mb-4">
                                                <label class="form-label">Description</label>
                                                <textarea placeholder="Type here" class="form-control"
                                                    name="categoryDescription" required></textarea>
                                            </div>
                                            <div class="d-grid">
                                                <button class="btn btn-primary">Create category</button>
                                            </div>
                                        </form>
                            </div>
                            <div class="col-md-9">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Sl No</th>
                                                <th>Name</th>
                                                <th>Description</th>
                                                <!-- <th>Registered</th> -->
                                                <th>status</th>
                                                <th class="text-end">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% for(let i = 0; i < categoryData.length; i++) { %>
                                            <tr>
                                                <td><%= i + 1 %></td>
                                                <td><%= categoryData[i].name %></td>
                                                <td><%= categoryData[i].discription %></td>
                                                <td>
                                                    <% if (!categoryData[i].list) { %>
                                                    <span class="r-150 badge rounded-pill alert-success">Active</span>
                                                    <% } else { %>
                                                    <span class="badge rounded-pill alert-danger">Deactive</span>
                                                    <% } %>
                                                </td>
                                                <td class="text-end">
                                                    <div class="">
                                                        <a href="#" data-bs-toggle="dropdown" class="btn btn-light rounded btn-sm font-sm">
                                                            <i class="material-icons md-more_horiz"></i>
                                                        </a>
                                                        <div class="dropdown-menu">
                                                            <!-- Toggle Offer -->
                                                            <a class="dropdown-item" href="#" onclick="toggleOffer('<%= categoryData[i]._id %>', '<%= categoryData[i].offerApplied %>')">
                                                                <span id="offerStatus-<%= categoryData[i]._id %>">
                                                                    <%= categoryData[i].offerApplied ? 'Remove offer' : 'Apply offer' %>
                                                                </span>
                                                            </a>
                                                            
                                                            <!-- List/Unlist -->
                                                            <div class="">
                                                                <% if (categoryData[i].list) { %>
                                                                <a class="dropdown-item" onclick="listOrUnlist('<%= categoryData[i]._id %>', true)">List</a>
                                                                <% } else { %>
                                                                <a class="dropdown-item" onclick="listOrUnlist('<%= categoryData[i]._id %>', false)">UnList</a>
                                                                <% } %>
                                                            </div>
                                                            
                                                            <!-- Edit Category -->
                                                            <a class="dropdown-item" id="edit" href="/admin/editCategory?categoryId=<%= categoryData[i]._id %>">Edit Category</a>
                                                            
                                                            <!-- Delete Category -->
                                                            <a class="dropdown-item text-danger" href="/admin/category/deleteCategory?categoryId=<%= categoryData[i]._id %>">Delete</a>
                                                        </div>
                                                    </div>
                                                    <!-- dropdown //end -->
                                                </td>
                                            </tr>
                                            <% } %>
                                        </tbody>
                                        
                                    </table>
                                </div>
                            </div>
                            <!-- .col// -->
                        </div>
                        <!-- .row // -->
                    </div>
                    <!-- card body .// -->
                </div>
                <!-- card .// -->
            </section>
            <!-- content-main end// -->
            <footer class="main-footer font-xs">
            </footer>
        </main>
    <script src="/adminAssets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/adminAssets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/adminAssets/js/vendors/select2.min.js"></script>
    <script src="/adminAssets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/adminAssets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/adminAssets/js/main.js?v=1.1" type="text/javascript"></script>
    <script>
        async function listOrUnlist(categoryId, list) {
            const confirmation = await Swal.fire({
                title: list ? "List Category" : "Unlist Category",
                text: list ? "Are you sure you want to list this Category?" : "Are you sure you want to unlist this Category?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes",
                cancelButtonText: "Cancel",
                customClass: {
                    popup: 'custom-swal-background'
                }
            });
            
    
            if (confirmation.isConfirmed) {
                try {
                    const response = await fetch('/admin/category/list', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ categoryId, list })
                    });
                    const data = await response.json();
                    if (data) {
                        await Swal.fire({
                            title: list ? "Category Listed!" : "Category Unlisted!",
                            text: list ? "Your category has been successfully listed." : "Your category has been successfully unlisted.",
                            icon: "success",
                            customClass: {
                                popup: 'custom-swal-background'
                            }
                        });
                        location.reload();
                    }
                } catch (error) {
                    console.error('Error:', error);
                    await Swal.fire({
                        title: "Oops!",
                        text: "Something went wrong. Please try again later.",
                        icon: "error",
                        customClass: {
                            popup: 'custom-swal-background'
                        }
                    });
                }
            }
        }
    </script>
    
    <script>
        async function toggleOffer(categoryId, offerApplied) {
            try {
                // Determine the action based on the offerApplied flag
                const action = offerApplied === 'true' ? 'remove' : 'apply';
                const url = action === 'apply' ? '/admin/getOffer' : '/admin/removeOffer';
                const confirmText = action === 'apply' ? 'Apply offer to category?' : 'Remove offer from category?';
    
                console.log('confirmText', confirmText);
    
                if (action === 'apply') {
                    // Fetch available offers only if applying an offer
                    const offersResponse = await fetch(url, { method: 'GET' });
    
                    if (!offersResponse.ok) {
                        throw new Error('Failed to fetch offers');
                    }
    
                    const offers = await offersResponse.json();
    
                    // Show SweetAlert to select an offer
                    const { value: selectedOfferId } = await Swal.fire({
                        title: 'Select an Offer',
                        input: 'select',
                        inputOptions: Object.fromEntries(
                            offers
                                .filter(offer => offer.type === 'category')
                                .map(offer => [
                                    offer._id,
                                    `${offer.name} - ${offer.percentage}% (Expires: ${new Date(offer.expireDate).toLocaleDateString()})`
                                ])
                        ),
                        inputPlaceholder: 'Select an offer',
                        showCancelButton: true,
                        cancelButtonText: 'Cancel',
                        customClass: {
                            popup: 'custom-swal-background'
                        },
                        inputValidator: (value) => {
                            if (!value) {
                                return 'You need to select an offer';
                            }
                        }
                    });
    
                    if (selectedOfferId) {
                        // Find the selected offer
                        const selectedOffer = offers.find(offer => offer._id === selectedOfferId);
                        const offerName = selectedOffer ? selectedOffer.name : '';
    
                        // Confirm apply offer
                        const confirmAction = await Swal.fire({
                            title: 'Are you sure?',
                            text: confirmText,
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Apply',
                            cancelButtonText: 'Cancel',
                            customClass: {
                                popup: 'custom-swal-background'
                            }
                        });
    
                        if (confirmAction.isConfirmed) {
                            // Apply selected offer
                            const response = await fetch('/admin/applyOffer', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ categoryId, offerName }) // Sending offerName and categoryId
                            });
    
                            if (!response.ok) {
                                throw new Error('Failed to apply offer');
                            }
    
                            // Update offer status text
                            document.getElementById(`offerStatus-${categoryId}`).innerText = 'Remove offer';
    
                            Swal.fire({
                                title: 'Offer Applied!',
                                text: 'The offer has been successfully applied.',
                                icon: 'success',
                                customClass: {
                                    popup: 'custom-swal-background'
                                }
                            });
                        }
                    }
                } else {
                    // Confirm remove offer
                    const confirmAction = await Swal.fire({
                        title: 'Are you sure?',
                        text: confirmText,
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Remove',
                        cancelButtonText: 'Cancel',
                        customClass: {
                            popup: 'custom-swal-background'
                        }
                    });
    
                    if (confirmAction.isConfirmed) {
                        // Remove offer
                        const response = await fetch('/admin/removeOffer', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ categoryId })
                        });
    
                        if (!response.ok) {
                            throw new Error('Failed to remove offer');
                        }
    
                        // Update offer status text
                        document.getElementById(`offerStatus-${categoryId}`).innerText = 'Apply offer';
    
                        Swal.fire({
                            title: 'Offer Removed!',
                            text: 'The offer has been successfully removed.',
                            icon: 'success',
                            customClass: {
                                popup: 'custom-swal-background'
                            }
                        });
                    }
                }
            } catch (error) {
                console.error(`Error ${offerApplied === 'true' ? 'removing' : 'applying'} offer:`, error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: `Failed to ${offerApplied === 'true' ? 'remove' : 'apply'} offer!`,
                    customClass: {
                        popup: 'custom-swal-background'
                    }
                });
            }
        }
    </script>
    

</body>

</html>
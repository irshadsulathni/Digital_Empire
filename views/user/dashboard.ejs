<!DOCTYPE html>
<html lang="en">


<!-- molla/dashboard.html  22 Nov 2019 10:03:13 GMT -->

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Digital Empire</title>
    <meta name="keywords" content="HTML5 Template">
    <meta name="description" content="Molla - Bootstrap eCommerce Template">
    <meta name="author" content="p-themes">
    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="/userAssets/images/icons/apple-touch-icon.png">
    <link rel="icon" type="favicon/jpg" sizes="32x32" href="/userAssets/images/icons/icon.jpg">
    <link rel="icon" type="favicon/jpg" sizes="16x16" href="/userAssets/images/icons/icon.jpg">
    <link rel="manifest" href="/userAssets/images/icons/site.html">
    <link rel="mask-icon" href="/userAssets/images/icons/safari-pinned-tab.svg" color="#666666">
    <link rel="shortcut icon" href="/userAssets/images/icons/icon.jpg">
    <meta name="apple-mobile-web-app-title" content="Molla">
    <meta name="application-name" content="Molla">
    <meta name="msapplication-TileColor" content="#cc9966">
    <meta name="msapplication-config" content="Assets/images/icons/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">
    <link rel="stylesheet" href="/userAssets/vendor/line-awesome/line-awesome/line-awesome/css/line-awesome.min.css">
    <!-- Plugins CSS File -->
    <link rel="stylesheet" href="/userAssets/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    <!-- Main CSS File -->
    <link rel="stylesheet" href="/userAssets/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="/path/to/your/styles.css">

    <!-- Include Razorpay Library -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>


    <style>
        .password-container {
            position: relative;
        }

        .eye-icon {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f7f7f7;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        .order-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            animation: slideIn 0.5s ease;
        }

        .order-details {
            border: 1px solid #ccc;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 5px;
            background-color: #f9f9f9;
            display: flex;
            flex-direction: column;
        }

        .order-details h2,
        .order-details h6 {
            margin-bottom: 10px;
            color: #555;
        }

        .order-details p {
            margin: 5px 0;
            color: #777;
        }

        .order-details table {
            width: 100%;
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .order-details .btn {
            margin-top: 10px;
        }

        .cancel-button {
            background-color: #ff5050;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-left: 20px;
        }

        .cancel-button:hover {
            background-color: #cc0000;
        }

        @media (max-width: 768px) {
            .order-container {
                padding: 30px;
            }

            .order-details {
                padding: 15px;
            }

            .cancel-button {
                margin-left: 0;
                margin-top: 10px;
            }
        }

        /* Modal Content */
        .modal-content {
            border-radius: 10px;
        }

        /* Modal Header */
        .modal-header {
            background-color: #007bff;
            color: #fff;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        /* Modal Body */
        .modal-body {
            padding: 20px;
        }

        /* Modal Footer */
        .modal-footer {
            justify-content: flex-end;
            border-top: none;
        }

        /* Define badge styles */
        .badge {
            padding: 5px 10px;
            border-radius: 3px;
        }

        /* Styles for different status types */
        .badge.Pending {
            background-color: #ffc107;
            /* Warning color for pending */
            color: #000000;
            /* Text color */
        }

        .badge.Shipped {
            background-color: #17a2b8;
            color: #ffffff;
            /* Text color */
        }

        .badge.Delivered {
            background-color: #28a745;
            /* Success color for delivered */
            color: #ffffff;
            /* Text color */
        }

        .badge.Canceled {
            background-color: #dc3545;
            /* Danger color for canceled */
            color: #ffffff;
            /* Text color */
        }

        .badge.Confirmed {
            background-color: #8bc34a;
            color: #ffffff;
        }
        .badge.Accepted {
            background-color: #8bc34a;
            color: #ffff;
        }

        .badge.Denied {
            background-color: rgb(230, 2, 2);
            color: #ffff;
        }

        /* Default style for other statuses */
        .badge {
            background-color: #6c757d;
            /* Secondary color */
            color: #ffffff;
            /* Text color */
        }

        /* modal css */

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
            /* Adjust this width to your preference */
            max-width: 400px;
            /* Maximum width of the modal */
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        textarea {
            width: 100%;
            resize: none;
            margin-bottom: 10px;
        }

        #submitCancellation {
            background-color: #f44336;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        #submitCancellation:hover {
            background-color: #da190b;
        }

        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .card-body {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .card-title {
            font-size: 1.25rem;
            margin-bottom: 0.75rem;
        }

        .coupon-expiry {
            font-weight: bold;
        }

        .coupon-expiry.expired {
            color: red;
        }

        .btn {
            margin-top: auto;
        }

        @media (max-width: 767px) {
            .card-title {
                font-size: 1.15rem;
            }

            .card-body {
                padding: 15px;
            }
        }

        .wallet-balance {
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    padding: 20px;
    border-radius: 10px;
}

.wallet-balance h3 {
    margin-top: 0;
    font-size: 24px;
    color: #333;
}

.balance-info {
    margin-bottom: 20px;
}

.balance-label {
    font-weight: bold;
    color: #555;
}

.balance-amount {
    font-size: 28px;
    color: #27ae60;
}

.actions {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.btn {
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

.btn-primary {
    background-color: #007bff;
    color: #fff;
    border: none;
}

.btn-secondary {
    background-color: #6c757d;
    color: #fff;
    border: none;
}

.wallet-balance {
    margin-top: 20px;
}

.wallet-balance {
    margin-top: 20px;
}

.transactions {
    list-style: none;
    padding: 0;
}

.transactions li {
    margin-bottom: 10px;
    display: flex;
    align-items: center;
}

.transaction-type {
    width: 100px; /* Set equal width */
    padding: 5px 10px;
    border-radius: 5px;
    text-align: center;
    color: #fff;
    background-color: green; /* Default background color for transaction type */
}

.debit {
    background-color: #dc3545;
}

.credit {
    background-color: #28a745;
    color: #000; /* Black text for visibility on white background */
}

.cancellation {
    background-color: #ffc107;
    color: #000; /* Black text for visibility on white background */
}

.transaction-amount,
.transaction-date {
    margin-left: auto;
    color: #555;
}


    </style>

</head>

<body>
    <div class="page-wrapper">


        <!-- page header ejs -->



        <%- include('../layouts/pageHeader') %>


            <main class="main">
                <div class="page-header text-center"
                    style="background-image: url('/userAssets/images/page-header-bg.jpg')">
                    <div class="container">
                        <h1 class="page-title">My Account<span>Shop</span></h1>
                    </div><!-- End .container -->
                </div><!-- End .page-header -->
                <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
                    <div class="container">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                            <li class="breadcrumb-item"><a href="#">Shop</a></li>
                            <li class="breadcrumb-item active" aria-current="page">My Account</li>
                        </ol>
                    </div><!-- End .container -->
                </nav><!-- End .breadcrumb-nav -->
                <div class="page-content">
                    <div class="dashboard">
                        <div class="container">
                            <div class="row">
                                <aside class="col-md-4 col-lg-3">
                                    <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" id="tab-dashboard-link" data-toggle="tab"
                                                href="#tab-dashboard" role="tab" aria-controls="tab-dashboard"
                                                aria-selected="true">Dashboard</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="tab-orders-link" data-toggle="tab"
                                                href="#tab-orders" role="tab" aria-controls="tab-orders"
                                                aria-selected="false">Orders</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="tab-downloads-link" data-toggle="tab"
                                                href="#tab-downloads" role="tab" aria-controls="tab-downloads"
                                                aria-selected="false">Coupen</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="tab-address-link" data-toggle="tab"
                                                href="#tab-address" role="tab" aria-controls="tab-address"
                                                aria-selected="false">Adresses</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="tab-account-link" data-toggle="tab"
                                                href="#tab-account" role="tab" aria-controls="tab-account"
                                                aria-selected="false">Account Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a type="button" class="nav-link" id="logoutButton">Sign Out</a>
                                        </li>
                                    </ul>
                                </aside><!-- End .col-lg-3 -->

                                <div class="col-md-8 col-lg-9">
                                    <div class="tab-content">
                                        <div class="tab-pane fade show active" id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
                                            <p>Hello <span class="font-weight-normal text-dark">
                                                    <%= userData.name %>
                                                </span>
                                            </p>
                                
                                            <% if (isGoogleUser) { %>
                                                <!-- Special content for Google users -->
                                                <div class="google-user-section">
                                                    <img src="/userAssets/images/instruction/goodOne.png" alt="Google Logo" class="img-fluid" style="max-width: 250px;">
                                                    <p>Welcome, <%= userData.name %>! You are logged in via Google.</p>
                                                    <p>Here's some exclusive content for you.</p>
                                                    <div class="alert alert-success">
                                                        <p><strong>Google User Special Features:</strong></p>
                                                        <ul>
                                                            <li>Access to exclusive offers.</li>
                                                            <li>Premium support services.</li>
                                                            <li>Early access to new features.</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            <% } else { %>
                                                <!-- Content for non-Google users -->
                                                <form id="password-update-form">
                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <label>Full Name </label>
                                                            <input type="text" value="<%= userData.name %>" class="form-control" required>
                                                        </div><!-- End .col-sm-6 -->
                                                        <div class="col-sm-6">
                                                            <label>Phone</label>
                                                            <input type="text" value="<%= userData.mobile %>" class="form-control" required>
                                                        </div>
                                                    </div><!-- End .row -->
                                
                                                    <label>Current password (leave blank to leave unchanged)</label>
                                                    <div class="password-container">
                                                        <input id="current-password" type="password" class="form-control">
                                                        <i class="fa fa-eye eye-icon" onclick="togglePassword('current-password')"></i>
                                                    </div>
                                
                                                    <label>New password (leave blank to leave unchanged)</label>
                                                    <div class="password-container">
                                                        <input id="new-password" type="password" class="form-control">
                                                        <i class="fa fa-eye eye-icon" onclick="togglePassword('new-password')"></i>
                                                    </div>
                                
                                                    <label>Confirm new password</label>
                                                    <div class="password-container">
                                                        <input id="confirm-password" type="password" class="form-control mb-2">
                                                        <i class="fa fa-eye eye-icon" onclick="togglePassword('confirm-password')"></i>
                                                    </div>
                                
                                                    <button type="submit" class="btn btn-outline-primary-2">
                                                        <span>SAVE CHANGES</span>
                                                        <i class="icon-long-arrow-right"></i>
                                                    </button>
                                                </form>
                                            <% } %>
                                        </div><!-- .End .tab-pane -->
                                        

                                        <div class="tab-pane fade" id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
                                            <div id="order-container" style="width: 100%; margin: 0 55px;">
                                                <div class="container order-container" style="width: 100%; display: flex; flex-wrap: wrap; justify-content: space-between;">
                                                    <h3 style="width: 100%; text-align: center;">Order Details</h3>
                                                    <% if (orderData.length > 0) { %>
                                                        <% orderData.forEach(element => { %>
                                                            <div class="order-details" style="width: calc(50% - 20px); margin-bottom: 20px;">
                                                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                                                    <p><strong>Date:</strong> <%= new Date(element.timeStamp).toDateString() %></p>
                                                                    <div class="status-badge">
                                                                        <span class="badge <%= element.status %>"><%= element.status %></span>
                                                                    </div>
                                                                </div>
                                                                <h6>Order #<%= element.orderNumber %></h6>
                                                                <table class="table table-bordered">
                                                                    <thead>
                                                                        <tr>
                                                                            <th>Product</th>
                                                                            <th>Price</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <% element.product.forEach(product => { %>
                                                                            <tr>
                                                                                <td>
                                                                                    <% if (product.productId) { %>
                                                                                        <%= product.productId.productName %>
                                                                                    <% } else { %>
                                                                                        Product ID not available
                                                                                    <% } %>
                                                                                </td>
                                                                                <td>
                                                                                    $<%= product.productId && product.productId.varientId ? product.productId.varientId.variantPrice : '' %>
                                                                                </td>
                                                                            </tr>
                                                                        <% }) %>
                                                                    </tbody>
                                                                </table>
                                                                <p><strong>SubTotal:</strong> $<%= element.orderTotal %></p>
                                                                <a href="/orderTracking?orderId=<%= element._id %>" class="btn btn-primary">View Details</a>
                                                                <% if (element.status === 'Payment Pending') { %>
                                                                    <button class="btn btn-warning" onclick="retryPayment('<%= element._id %>')">Retry Payment</button>
                                                                <% } %>
                                                                <% if (element.status !== 'Canceled' && element.status !== 'Delivered' && element.status !== 'Payment Pending' && element.status !== 'Refund' && element.status !== 'Return Processing' && element.status !== 'Refund Accepted') { %>
                                                                    <button class="btn btn-danger" onclick="cancelOrder('<%= element._id %>')">Cancel Order</button>
                                                                <% } else if (element.status === 'Delivered') { %>
                                                                    <button class="btn btn-danger" onclick="openModal('<%= element._id %>')">Return Order</button>
                                                                <% } %>
                                                            </div>
                                                        <% }) %>
                                                    <% } else { %>
                                                        <p style="width: 100%; text-align: center;">No orders have been made yet.</p>
                                                        <a href="/shop" class="btn btn-outline-primary-2" style="margin: 0 auto;"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a>
                                                    <% } %>
                                                </div>
                                            </div>
                                        </div>
                                        

                                        <div class="tab-pane fade" id="tab-downloads" role="tabpanel"
                                            aria-labelledby="tab-downloads-link">
                                            <div class="container coupon-container">
                                                <h3 class="text-start mb-4" style="padding-left: 35rem;">Available
                                                    Coupons</h3>
                                                <div class="row justify-content-start">
                                                    <% if (coupons.length > 0) { %>
                                                        <% coupons.forEach(function(coupon) { %>
                                                            <div class="col-6 mb-4 w-50">
                                                                <div class="card h-100 w-75">
                                                                    <div class="card-body">
                                                                        <h5 class="card-title">
                                                                            <%= coupon.name %>
                                                                        </h5>
                                                                        <ul class="list-unstyled">
                                                                            <li><strong>Amount:</strong> <%= coupon.amount %></li>
                                                                            <li><strong>Minimum Purchase Amount:</strong> <%= coupon.minimumAmount %></li> <!-- Add this line -->
                                                                            <% if (!coupon.usersList.some(userCoupon => userCoupon.userId.equals(userData._id))) { %>
                                                                                <li><strong>Coupon Code:</strong> <%= coupon.coupenCode %></li>
                                                                            <% } %>
                                                                            <li><strong>Expires:</strong> 
                                                                                <% if (coupon.expired) { %>
                                                                                    <span class="coupon-expiry <%= coupon.expired < new Date() ? 'expired' : '' %>">
                                                                                        <%= coupon.expired.toDateString() %>
                                                                                    </span>
                                                                                <% } else { %>
                                                                                    <span class="text-muted">N/A</span>
                                                                                <% } %>
                                                                            </li>
                                                                        </ul>
                                                                        <% if (!coupon.usersList.some(userCoupon => userCoupon.userId.equals(userData._id))) { %>
                                                                            <button class="btn btn-primary btn-sm copy-coupon" data-coupon="<%= coupon.coupenCode %>">Copy Coupon Code</button>
                                                                        <% } else { %>
                                                                            <p class="text-muted">Coupon already used</p>
                                                                        <% } %>
                                                                    </div>
                                                                    
                                                                </div>
                                                            </div>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <div class="col-12">
                                                            <p class="text-center" style="padding-left: 40rem;">No coupons available at the moment.</p>
                                                        </div>
                                                    <% } %>

                                                </div>
                                            </div>
                                        </div>

                                        <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
                                            <div class="wallet-balance">
                                                <% if (walletData && walletData.balance != null) { %>
                                                    <h3>My Wallet</h3>
                                                    <div class="balance-info">
                                                        <span class="balance-label">Current Balance:</span>
                                                        <span class="balance-amount">₹ <%= walletData.balance %></span>
                                                    </div>
                                                    <div class="transaction-history">
                                                        <h4>Transaction History</h4>
                                                        <% if (walletData.history && walletData.history.length > 0) { %>
                                                            <ul class="transactions">
                                                                <% walletData.history.forEach(function(transaction) { %>
                                                                    <li>
                                                                        <span class="transaction-type <%= transaction.type %>">
                                                                            <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                                                                        </span>
                                                                        <span class="transaction-amount <%= transaction.type === 'debit' ? 'debit-amount' : 'credit-amount' %>">
                                                                            <%= transaction.type === 'debit' ? '-' : '+' %> ₹<%= transaction.amount %>
                                                                        </span>
                                                                        <span class="transaction-date">
                                                                            <%= new Date(transaction.timestamp).toLocaleString('en-IN', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' }) %>
                                                                        </span>
                                                                    </li>
                                                                <% }); %>
                                                            </ul>
                                                        <% } else { %>
                                                            <p>No transactions found.</p>
                                                        <% } %>
                                                    </div>
                                                <% } else { %>
                                                    <p>No Wallet</p>
                                                <% } %>
                                            </div>
                                        </div><!-- .End .tab-pane -->






                                        <div class="tab-pane fade" id="tab-address" role="tabpanel"
                                            aria-labelledby="tab-address-link">
                                            <p>The following addresses will be used on the checkout page by default.</p>

                                            <p>You Can Add up to 5 Addresses(<%= 5 - addressData.length %> remaining).
                                            </p>
                                            <% if (addressData.length < 5) { %>
                                                <p><a href="/address">Add new Address <i class="icon-edit"></i></a></p>
                                                <% } %>



                                                    <div class="row">
                                                        <% addressData.forEach((element, index)=> { %>
                                                            <div class="col-6">
                                                                <div class="card card-dashboard">
                                                                    <div class="card-body">
                                                                        <h3 class="card-title"> Address <%= index + 1 %>
                                                                        </h3>
                                                                        <p>
                                                                            <b>Name</b>: <%= element.fullName %> <br>
                                                                                <b>Mob</b>: <%= element.phoneNumber %>
                                                                                    <br>
                                                                                    <b>Address</b>: <%=
                                                                                        element.addressLine1 %>,
                                                                                        <%= element.addressLine2 %><br>
                                                                                            <%= element.city %>, <%=
                                                                                                    element.state %><br>
                                                                                                    <b>zip code</b>: <%=
                                                                                                        element.postalCode
                                                                                                        %>
                                                                                                        <br>
                                                                                                        <a href="/editAddress?addressId=<%= element._id %>"
                                                                                                            class="text-primary">Edit
                                                                                                            <i
                                                                                                                class="fas fa-edit"></i></a>
                                                                                                        <!-- Added Delete button below -->
                                                                                                        <a href="#"
                                                                                                            onclick="confirmDelete('<%= element._id %>')"
                                                                                                            class="text-danger ml-3">Delete
                                                                                                            <i
                                                                                                                class="fas fa-trash"></i></a>
                                                                        </p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <% }); %>
                                                    </div>
                                        </div><!-- End .col-lg-6 ---->

                                        <!-- <div class="col-lg-6">
                                                    <div class="card card-dashboard">
                                                        <div class="card-body">
                                                            <h3 class="card-title">Shipping Address</h3><!-- End .card-title --
    
                                                            <p>You have not set up this type of address yet.<br>
                                                            <a href="#">Edit <i class="icon-edit"></i></a></p>
                                                        </div><!-- End .card-body --
                                                    </div><!-- End .card-dashboard --
                                                </div>End .col-lg-6 -->
                                    </div><!-- End .row -->

                                </div><!-- .End .tab-pane -->

                                <!-- <div class="tab-pane fade" id="tab-address" role="tabpanel"
                                            aria-labelledby="tab-address-link">

                                            <h3 class="card-title mb-1"><b><u>Billing Address</u></b></h3>
                                            <!-- End .card-title --


                                            <p style="color: red;" class="d-inline-flex p-2 ">*</p>


                                            <p>The <b>1st address</b> will be used on the checkout page by default.</p>

                                            <div class="row">

                                                <div class="col-lg-6">
                                                    <p><b>There has no Address Added</b></p>
                                                </div>


                                                <div class="col-lg-6">
                                                    <div class="card card-dashboard">
                                                        <div class="card-body">
                                                            <p><b>SI : </b><br>
                                                                <b>Name : </b><br>
                                                                <b>Mobile Number : </b><br>
                                                                <b>Location : </b>, , <br>
                                                                <b>Pincode : </b><br>

                                                                <b>Landmark : </b><br>

                                                                <b>Secondary Number : </b><br>

                                                                <a onmouseover="this.style.textDecoration = 'underline'"
                                                                    onmouseout="this.style.textDecoration = 'none'"
                                                                    href=""
                                                                    class="mr-3">Edit <i class="icon-edit"></i></a>
                                                                <a onmouseover="this.style.textDecoration = 'underline'; this.style.cursor = 'pointer'"
                                                                    onmouseout="this.style.textDecoration = 'none'"

                                                                    style="color: #d15a5e;">Delete<svg
                                                                        xmlns="http://www.w3.org/2000/svg" height="24px"
                                                                        viewBox="0 -960 960 960" width="14px"
                                                                        fill="#d15a5e">
                                                                        <path
                                                                            d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z" />
                                                                    </svg></a>
                                                            </p>
                                                        </div><!-- End .card-body --
                                                    </div><!-- End .card-dashboard --
                                                </div><!-- End .col-lg-6 --


                                                <div class="col-lg-6">
                                                    <div class="card card-dashboard">
                                                        <div class="card-body">
                                                            <h3 class="card-title">Shipping Address</h3>
                                                            <!-- End .card-title --

                                                            <p>You Can Add upto 5 Adresses( %>
                                                                    remaining).<br>
                                                                    <a href="/addAddress">Add new Address <i
                                                                            class="icon-edit"></i></a></p>
                                                        </div><!-- End .card-body --
                                                    </div><!-- End .card-dashboard --
                                                </div><!-- End .col-lg-6 --
                                            </div><!-- End .row --
                                        </div>.End .tab-pane -->
                            </div>
                        </div><!-- End .col-lg-9 -->
                    </div><!-- End .row -->
                </div><!-- End .container -->
    </div><!-- End .dashboard -->

    </div><!-- End .page-content -->

    </main><!-- End .main -->


    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Reason for Cancellation</h2>
            <textarea id="cancellationReason" rows="4" cols="50"></textarea>
            <button id="submitCancellation">Submit</button>
        </div>
    </div>



    <!--  for the footer of the page -->




    <%- include('../layouts/pageFooter') %>



        </div><!-- End .page-wrapper -->
        <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

        <!-- Mobile Menu -->
        <div class="mobile-menu-overlay"></div><!-- End .mobil-menu-overlay -->

        <div class="mobile-menu-container">
            <div class="mobile-menu-wrapper">
                <span class="mobile-menu-close"><i class="icon-close"></i></span>

                <form action="#" method="get" class="mobile-search">
                    <label for="mobile-search" class="sr-only">Search</label>
                    <input type="search" class="form-control" name="mobile-search" id="mobile-search"
                        placeholder="Search in..." required>
                    <button class="btn btn-primary" type="submit"><i class="icon-search"></i></button>
                </form>

                <div class="social-icons">
                    <a href="#" class="social-icon" target="_blank" title="Facebook"><i class="icon-facebook-f"></i></a>
                    <a href="#" class="social-icon" target="_blank" title="Twitter"><i class="icon-twitter"></i></a>
                    <a href="#" class="social-icon" target="_blank" title="Instagram"><i class="icon-instagram"></i></a>
                    <a href="#" class="social-icon" target="_blank" title="Youtube"><i class="icon-youtube"></i></a>
                </div> <!-- End .social-icons -->
            </div> <!-- End .mobile-menu-wrapper -->
        </div> <!-- End .mobile-menu-container -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var submitButton = document.getElementById('submitCancellation');
                submitButton.addEventListener('click', function () {
                    var reason = document.getElementById('cancellationReason').value;
                    // Replace this with your SweetAlert code
                    swal("Submitted!", "Reason: " + reason, "success");
                });
            });
        </script>

        <script>
            document.getElementById('logoutButton').addEventListener('click', function () {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, log me out!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // If confirmed, send a request to the logout endpoint
                        fetch('/logout', {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => {
                                console.log('Logout response:', response); // Debugging line
                                if (response.ok) {
                                    const data = response.json();

                                    if (data.error) {
                                        Swal.fire(
                                            'Error!',
                                            'Limit is over.',
                                            'error'
                                        );
                                    }

                                    window.location.href = '/';
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        'There was a problem logging you out.',
                                        'error'
                                    );
                                }
                            })
                            .catch(error => {
                                console.error('Error during fetch:', error); // Debugging line
                                Swal.fire(
                                    'Error!',
                                    'There was a problem logging you out.',
                                    'error'
                                );
                            });
                    }
                });
            });
            document.addEventListener('DOMContentLoaded', function () {
                document.getElementById('password-update-form').addEventListener('submit', function (event) {
                    event.preventDefault();

                    // Fetch the form data
                    const formData = {
                        currentPassword: document.getElementById('current-password').value,
                        newPassword: document.getElementById('new-password').value,
                        confirmPassword: document.getElementById('confirm-password').value
                    };

                    // Fetch request to update password
                    fetch('/dashboard', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    })
                        .then(response => {
                            if (response.ok) {
                                return response.json(); // Parse response body as JSON
                            } else {
                                throw new Error('Failed to update password'); // Throw error for non-successful response
                            }
                        })
                        .then(data => {
                            if (data.success) {
                                Toastify({
                                    text: 'Password updated successfully',
                                    backgroundColor: 'green',
                                    duration: 3000
                                }).showToast();
                            } else {
                                Toastify({
                                    text: data.message, // Display the error message received from the server
                                    backgroundColor: 'red',
                                    duration: 3000
                                }).showToast();
                            }
                        })
                        .catch(error => {
                            console.error('Error updating password:', error.message);
                            Toastify({
                                text: 'Failed to update password. Please try again later.',
                                backgroundColor: 'red',
                                duration: 3000
                            }).showToast();
                        });
                });
            });

            async function confirmDelete(addressId) {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to recover this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    customClass: {
                        popup: 'custom-swal-background'
                    }
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/dashboard/deleteAddress?addressId=${addressId}`, {
                            method: 'DELETE'
                        });

                        const data = await response.json();

                        if (response.ok) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: data.message,
                                icon: 'success'
                            }).then(() => {
                                window.location.reload()
                            })
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message || 'Something went wrong!',
                                icon: 'error'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while deleting the address.',
                            icon: 'error'
                        });
                        console.error('Error:', error);
                    }
                }
            }

            // for showing the password

            function togglePassword(id) {
                var input = document.getElementById(id);
                var icon = input.nextElementSibling;
                if (input.type === "password") {
                    input.type = "text";
                    icon.classList.remove("fa-eye");
                    icon.classList.add("fa-eye-slash");
                } else {
                    input.type = "password";
                    icon.classList.remove("fa-eye-slash");
                    icon.classList.add("fa-eye");
                }
            }




            // for cancel the order

            function cancelOrder(orderId) {

                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you really want to cancel this order?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, cancel it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Create URL-encoded form data
                        const params = new URLSearchParams();
                        params.append('orderId', orderId);

                        fetch(`/cancelOrder/${orderId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: params
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success == 'success') {
                                    Swal.fire(
                                        'Cancelled!',
                                        'Your order has been cancelled.',
                                        'success'
                                    );
                                }
                            }).then(() => {
                                window.location.reload();
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                Swal.fire(
                                    'Error!',
                                    'There was a problem cancelling your order.',
                                    'error'
                                );
                            });
                    }
                });
            }

            // Function to open modal
            function openModal(orderId) {
                var modal = document.getElementById("myModal");
                var span = document.getElementsByClassName("close")[0];

                modal.style.display = "block";

                span.onclick = function () {
                    modal.style.display = "none";
                }

                window.onclick = function (event) {
                    if (event.target == modal) {
                        modal.style.display = "none";
                    }
                }

                // Handle submission of cancellation reason
                document.getElementById("submitCancellation").onclick = function () {
                    var reason = document.getElementById("cancellationReason").value;
                    console.log("Reason for cancellation:", reason);

                    axios.post('/returnOrder', {
                        orderId: orderId,
                        reason: reason
                    })
                        .then(function (response) {
                            console.log(response.data);
                        })
                        .catch(function (error) {
                            console.error("Error cancelling order:", error);
                        });

                    modal.style.display = "none";
                }
            }




            // for copying coupen code

            document.addEventListener('DOMContentLoaded', function () {
                const copyButtons = document.querySelectorAll('.copy-coupon');
                copyButtons.forEach(function (button) {
                    button.addEventListener('click', function () {
                        const coupenCode = this.getAttribute('data-coupon');
                        copyToClipboard(coupenCode);
                        Swal.fire({
                            icon: 'success',
                            title: 'Copied!',
                            text: 'Coupon code copied to clipboard: ' + coupenCode,
                            timer: 2000,
                            showConfirmButton: false,
                            toast: true,
                            position: 'top-end'
                        });
                    });
                });

                function copyToClipboard(text) {
                    const textarea = document.createElement('textarea');
                    textarea.value = text;
                    document.body.appendChild(textarea);
                    textarea.select();
                    document.execCommand('copy');
                    document.body.removeChild(textarea);
                }
            });

        </script>


        <!-- Plugins JS File -->
        <script src="/userAssets/js/jquery.min.js"></script>
        <script src="/userAssets/js/bootstrap.bundle.min.js"></script>
        <script src="/userAssets/js/jquery.hoverIntent.min.js"></script>
        <script src="/userAssets/js/jquery.waypoints.min.js"></script>
        <script src="/userAssets/js/superfish.min.js"></script>
        <script src="/userAssets/js/owl.carousel.min.js"></script>
        <!-- Main JS File -->
        <script src="/userAssets/js/main.js"></script>

        <script>
            function redirectToAddress(event) {
                event.preventDefault();
                window.location.href = '/address'
            }
        </script>



<!-- this for retryPayment from the razorpay -->


          <script>
    function retryPayment(orderId) {
        console.log(orderId);
        axios.post('/retryPaymentOrder', { orderId })

        
            .then(response => {
                var options = {
                    "key": "rzp_test_ADhVz53VKpu01p", // Replace with your actual Razorpay key
                    "amount": response.data.razorpayOrder.amount,
                    "currency": "INR",
                    "name": "Your Company",
                    "description": "Order Payment",
                    "image": "https://example.com/your_logo.png",
                    "order_id": response.data.razorpayOrder.id,
                    "handler": function (response) {
                        const paymentData = {
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_signature: response.razorpay_signature
                        };
                        axios.post('/verifyPayment', paymentData)
                            .then(response => {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Payment successful and verified!',
                                }).then(() => {
                                    window.location.href = `/loadsuccessPage?orderId=${response.data.orderId}`;
                                });
                            })
                            .catch(err => {
                                console.error(err);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Payment verification failed!',
                                });
                            });
                    },
                    "prefill": {
                        "name": "Customer Name",
                        "email": "customer@example.com",
                        "contact": "9999999999"
                    },
                    "notes": {
                        "address": "Customer Address"
                    },
                    "theme": {
                        "color": "#F37254"
                    }
                };
                var rzp1 = new Razorpay(options);

                rzp1.on('payment.failed', function (response) {
                    console.error(response.error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Payment failed. Please try again.'
                    });

                    axios.post('/paymentFailed', { orderId: response.error.metadata.order_id })
                        .then(response => {
                            console.log('Order status updated to Payment Pending and cart cleared');
                        })
                        .catch(err => {
                            console.error('Failed to update order status:', err);
                        });
                });

                rzp1.open();
            })
            .catch(error => {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to create order. Please try again.'
                });
            });
    }
        </script>
</body>


<!-- molla/dashboard.html  22 Nov 2019 10:03:13 GMT -->

</html>
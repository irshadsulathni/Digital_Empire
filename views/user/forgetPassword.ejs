<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            max-width: 400px;
            width: 100%;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            padding: 30px;
            box-sizing: border-box;
        }

        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }

        .input-group {
            margin-bottom: 20px;
            display: flex;
            align-items: center;
        }

        .input-group-addon {
            background-color: #007bff;
            color: #fff;
            padding: 12px;
            border-radius: 5px 0 0 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
        }

        .input-group input {
            width: calc(100% - 44px);
            /* Adjusted width for proper alignment */
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 0 5px 5px 0;
            box-sizing: border-box;
            margin: 0;
        }

        input[type="submit"] {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            width: 100%;
        }

        input[type="button"] {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            margin-left: 110px;

        }

        input[type="button"]:hover {
            background-color: #0056b3;
        }

        input[type="submit"]:hover {
            background-color: #0056b3;
        }

        .hidden {
            display: none;
        }

        .input-group .otp-input {
            width: calc(25% - 5px);
            /* Divide the width evenly among 4 inputs */
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-sizing: border-box;
            margin: 0 5px;
            /* Add a margin between inputs for spacing */
            text-align: center;
            /* Center align text inside inputs */
        }

        .input-group .otp-input:last-child {
            margin-right: 0;
            /* Remove right margin from the last input */
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

</head>

<body>
    <div class="container">
        <h2>Reset Password</h2>
        <form id="resetPasswordForm"> <!-- Add an ID to the form -->
            <div class="input-group" id="email-group">
                <span class="input-group-addon">@</span>
                <input type="email" id="email" name="email" placeholder="Enter the Email" required>
            </div>
            <div class="input-group hidden" id="otp-group">
                <input type="text" id="otp-1" name="otp-1" class="otp-input" maxlength="1">
                <input type="text" id="otp-2" name="otp-2" class="otp-input" maxlength="1">
                <input type="text" id="otp-3" name="otp-3" class="otp-input" maxlength="1">
                <input type="text" id="otp-4" name="otp-4" class="otp-input" maxlength="1">
            </div>
            <input type="submit" value="Submit" id="submit-btn">
            <input type="button" value="Verify OTP" onclick="validate()" class="hidden" id="otp-submit-btn">
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById('resetPasswordForm').addEventListener('submit', handleSubmit);

        // Function to handle input in OTP fields
        function handleOTPInput(event) {
            const maxLength = parseInt(event.target.getAttribute('maxlength'));
            const currentLength = event.target.value.length;

            if (event.inputType === 'deleteContentBackward') {
                // If backspace is pressed and the field is empty, move focus to the previous input field
                if (currentLength === 0) {
                    const previousInput = event.target.previousElementSibling;
                    if (previousInput) {
                        previousInput.focus();
                    }
                }
            } else if (currentLength >= maxLength) {
                // Move focus to the next input field
                const nextInput = event.target.nextElementSibling;
                if (nextInput) {
                    nextInput.focus();
                }
            }
        }

        // Function to handle backspace key press
        function handleBackspace(event) {
            // If backspace is pressed and the field is empty, move focus to the previous input field
            if (event.key === 'Backspace' && event.target.value.length === 0) {
                const previousInput = event.target.previousElementSibling;
                if (previousInput) {
                    previousInput.focus();
                }
            }
        }

        // Function to validate OTP
        function validate() {
            const otp1 = document.getElementById('otp-1').value;
            const otp2 = document.getElementById('otp-2').value;
            const otp3 = document.getElementById('otp-3').value;
            const otp4 = document.getElementById('otp-4').value;

            const mess = 'otp get here'
            
            // Check if any OTP digit is empty or undefined
            if (!otp1 || !otp2 || !otp3 || !otp4) {
                // Handle case where OTP is incomplete
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please enter all OTP digits'
                });
                return; // Exit function early
            }

            const otp = otp1 + otp2 + otp3 + otp4; // Concatenate all OTP digits
            const data = {
                otp: otp
            };

            // Send OTP to the backend for verification
            fetch('/forgetPassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data,mess)
            })
                .then(response => response.json())
                .then(result => {
                    // Handle verification result
                    if (result.success == 'success') {
                        // OTP is correct
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'OTP is correct',
                            showConfirmButton: false,
                            timer: 1500
                        });
                        window.location.href = '/password';
                    } else {
                        // OTP is incorrect
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Incorrect OTP'
                        });
                        // You can reset the OTP fields or display an error message to the user
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Handle errors
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to verify OTP'
                    });
                });
        }


        // Add event listeners to OTP input fields
        const otpInputs = document.querySelectorAll('.otp-input');
        otpInputs.forEach(input => {
            input.addEventListener('input', handleOTPInput);
            input.addEventListener('keydown', handleBackspace);
        });

        async function handleSubmit(event) {
            event.preventDefault();
            const email = document.getElementById('email').value;

            try {
                const mess = 'email get here'
                const response = await fetch('/forgetPassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: email, mess })
                });

                const result = await response.json();

                if (response.ok && result.success == 'success') {
                    Toastify({
                        text: "Email Verified. Please enter the OTP sent to your email.",
                        duration: 3000,
                        gravity: "top",
                        position: "center",
                        backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                    }).showToast();

                    // Show OTP field and hide email field
                    document.getElementById('otp-group').classList.remove('hidden');
                    document.getElementById('email-group').classList.add('hidden');
                    document.getElementById('submit-btn').classList.add('hidden');
                    document.getElementById('otp-submit-btn').classList.remove('hidden');
                    // Focus on the first OTP input field
                    document.getElementById('otp-1').focus();
                } else {
                    Toastify({
                        text: result.message || "Give a valid Email.",
                        duration: 3000,
                        gravity: "top",
                        position: "center",
                        backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
                    }).showToast();
                }
            } catch (error) {
                Toastify({
                    text: "There was a problem with the fetch operation: " + error.message,
                    duration: 3000,
                    gravity: "top",
                    position: "center",
                    backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
                }).showToast();
                console.error('There was a problem with the fetch operation:', error);
            }
        }
    </script>
</body>

</html>